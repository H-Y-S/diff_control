Notes:

When configuring a new definitions file ('.def'), or making other major
changes, it is generally a good idea to invoke camserver manually in a large
window to see all the error messages.  To do this, cd to the camserver 
directory, and type:
		./camserver path_to_resource_file_you_are_testing
Then, after all is well, you can switch to using 'runtvx' (which opens only a
small xterm for camserver).

If you're in real trouble, turn on the commented code line ~646 in camserver.c
to allow a chance to start GDB before initializations.

To change signal definitions:
1.  Make up a new signal definition file, such as sls_05_16_1.def.  Note that
     every signal must be defined, though "NOT_USED" is an acceptable
	 definition.
2.  Change camera.def to point to this new definition file.
3.  If you need new signal names, they must be entered in signals.c and 
     pix_detector.h.  


----- COMMANDS

Commands are not case sensitive.  Commands can be abbreviated, so long as the
abbreviation is unambiguous.  Thus, set_clk_divider can be abbreviate as
'set_c', quit by just 'q'.

Numbers may be given as decimals, or as hex values by using the '0x' prefix.

Camserver commands in the sls42 package:

~keystart=SeT
SeT - set DAC voltage or state of CHSEL (I2C protocol).  Usage:

		set signal_name value [filename]
		set chsel_name [value] [filename]

	1) signal_name or chsel_name is one of the names defined in signals.c
	2) value is in volts, defined in the definition file (e.g. sls_05_16_1.def)
	3) value is optional for chsel
	4) if filename is given, the pattern is also written to a file
	5) if auotexec is 'on', the pattern is run to set the voltage
	6) without a signal name, selected_band and selected_mod are set
~keyend

~keystart=Reset
Reset - reset state of CHSEL (I2C protocol).  Usage:

		reset chsel_name <filename>
~keyend		

~keystart=ProG
ProG - set DAC voltage or CHSEL to hexadecimal value (I2C protocol).  Usage:

		prog signal_name hex_value <filename>
		prog chsel_name hex_value <filename>

	1) 0 <= hex_value <= 0xff
	2) only values 0 and 1 are meaningful for chsel.
~keyend

~keystart=Show
Show - show current setting of DAC or CHSEL (I2C protocol).  Usage:

		show signal_name
		show chsel_name
~keyend

~keystart=Load
Load - load I2C configuration from a file.  Usage:

		load filename

	1) if path is not specified, cam_data_path is used
	2) each line contains a single set command (see above)
~keyend

~keystart=Save
Save - save I2C configuration to a file.  Usage:

		save filename

	1) if path is not specified, cam_data_path is used
	2) each line will contain a single set command (see above)
~keyend

~keystart=Filename
Filename - if set, automatically receives I2C patterns.  Usage:

		filename name

	1) if path is not specified, cam_data_path is used
~keyend

~keystart=DataPath
DataPath - change cam_data_path.  Usage:

		datapath path_to_directory

	1) path_to_directory should already exist & have write permission
~keyend

~keystart=AutoExec
AutoExec - controls whether I2C patterns are automatically executed.  Usage:

		autoexec <on/off>

	1) argument is 'on' or 'off'
	2) if no argument is given, the current state is reported
~keyend

~keystart=LoadPattern
LoadPattern - load a pattern file into VPG517.  Usage:

		loadpattern filename [offset]

	1) if path is not specified, cam_data_path is used
	2) offset, if given, is added to line numbers and addresses in pattern
~keyend

~keystart=RuN
RuN - load and run a pattern file in VPG517.  Usage:

		run file name [offset]

	1) if path is not specified, use cam_data_path
	2) offset, if given, is added to line numbers and addresses in pattern
~keyend

~keystart=Set_clk_divideR
Set_clk_divideR - set VPG517 clock divider.  Usage:

		set_clk_divider value

	1) 1 <= value <= 15
~keyend

~keystart=Pc_reseT
Pc_reseT - reset VPG517 program counter to 0.  Usage:

		pc_reset
~keyend

~keystart=Pc_set
Pc_set - set the VPG517 program counter to a line number.  Usage:

		pc_set line_number
~keyend

~keystart=StarT
StarT - start or restart the VPG517 program at a given line.  Usage:

		start <line>

	1) if line is not specified, the line from previous start, load or run
		is used.
~keyend

~keystart=StoP
StoP - stop the VPG517 program.  Usage:

		stop
~keyend

~keystart=Peek
Peek - peek at VPG517 memory address.  Usage:

		peek address

	1) prints 4 bytes starting at given address
	2) 0 <= address <= 0x1fffb (131,067)
	3) peekl is more useful
~keyend

~keystart=Poke
Poke - poke data into VPG517 memory address.  Usage:

		poke address data

	1) pokes 4 bytes into memory at given address
~keyend

~keystart=PeekL
PeekL - peek at given line in VPG517 memory.  Usage:

		peekl line_no

	1) prints 4 bytes at given line_no
	2) 0 <= line_no <= 0x7fff (32,767)
~keyend

~keystart=PokeL
PokeL - poke data into VPG517 memory at given line.  Usage:

		pokel line_no data

	1) pokes date into given line number
	2) 0 <= line_no <= 0x7fff (32,767)
~keyend

~keystart=PokeD
PokeD - poke data (hex) into VPG517 line (decimal).  Usage:

		poked decimal_line_no Hex_data

	1) superseded by improvements in pokel
~keyend

~keystart=Fpeek
Fpeek - peek at FIFO configuration address.  Usage:

		fpeek address
~keyend

~keystart=Fpoke
Fpoke - poke data into FIFO configuration address.  Usage:

		fpoke address data
~keyend

~keystart=Status
Status - print status from VPG517 and FIFO.  Usage:

		status
~keyend

~keystart=Vstatus
Vstatus - prints status from VPG517.  Usage:

		vstatus
~keyend

~keystart=Fstatus
Fstatus - print status from FIFO.  Usage:

		fstatus
~keyend

~keystart=Vwrite_status
Vwrite_status - write to VPG517 status register.
~keyend

~keystart=Fwrite_controL
Fwrite_controL - write to FIFO control register.
~keyend

~keystart=Fwrite_test
Fwrite_test - write to FIFO test register.
~keyend

~keystart=Fread_event
Fread_event - read FIFO event register
~keyend

~keystart=Fread_data
Fread_data - read FIFO data register
~keyend

~keystart=Fwrite_data
Fwrite_data - write ot FIFO data register
~keyend

~keystart=Fwait_time
Fwait_time - set FIFO timeout.  Usage:

		fwait_time seconds
~keyend

~keystart=ImG
ImG - read fifo data as image file and as ascii file.
~keyend

~keystart=ImgonlY
ImgonlY - read fifo data as image file.
~keyend

~keystart=Vclear
Vclear - clear VPG517.
~keyend

~keystart=Initialize
Initialize - initialize both VPG517 and FIFO.
~keyend

~keystart=Step
Step - step through VPG517 program.
~keyend

~keystart=Test_img
Test_img - create a test image in the FIFO.
~keyend

~keystart=Trim
Trim - set or read-back the trim value of a pixel.  Usage:

		trim x y value  -- set trim of pixel (x, y) to value
		trim x y        -- report current trim setting if pixel (x, y)

	1) 0 <= value <= 15; 0 is all off (1's), 15 is all on (0's)
	2) read-back is software only; no physical read of chip is possible
~keyend

~keystart=Trim_all
Trim_all - set trim in all pixles to a given value.  Usage;

		trim_all value
~keyend

~keystart=TrimFromFile
TrimFromFile - set all trims from a file of values.  Usage:

		trimfromfile filename

	1) The file contains 1 line per pixel with the trim command syntax:
		trim 0 0 3
		trim 1 0 7  -- etc.
	2) The file need not be complete; missing pixels are not reset
	3) Comments preceed by '#' are accepted.
	4) If a path is not specified, the current cam_data_path is used.
	5) This only loads the array; use SetTrims to write the array to the chip
~keyend

~keystart=SetTrims
SetTrims - set all trims from the internal array.  Usage:

		settrims
~keyend

~keystart=SaveTrimFile
SaveTrimFile - save all the current trim array to a file.  Usage:

		savetrimfile <filename>

	1) If a path is not specified, the current cam_data_path is used.
	2) if filename is not given, the last TrimFromFile filename is used
	3) The file contains 1 line per pixel with the trim command syntax:
		trim x y value.
	4) Obsolete - not a reasonable way to create a trim file
~keyend

~keystart=LogImgFile
LogImgFile - log the parameters of the last image to parameters file.  Usage:

		logimgfile

	1) Records parameters to 'params.txt' in the same directory as last image
	2) Parameters are: vcal, vtrm, vcmp, trim & img_name
~keyend

~keystart=Set_vpg
Set_vpg - set the default vpg unit.  Usage:

		set_vpg <unit>

	1) If unit is not given, command reports the current default
	2) Unit must be 1 or 2
	3) If only 1 unit was present at strtup, this command has no effect
~keyend

~keystart=Read_signals
Read_signals - re-read the i2c signal definitions.  Usage:

		read_signals filename
		
	1) Re-reads the ppg configuration file, e.g., 'sls05_mcb_16.def'.  The
		original file used at startup is declared in, e.g., 'camera.def'.
~keyend

~keystart=LogSettings
LogSettings - report selected i2c settings to treport.txt.  Usage:

		logsettings directory_path

	1) Used after tscan_ini, this reads selected settings from the internal
		table and appends values to treport.txt in the given directory.
	2) This is no substitute for an actual measurement.
~keyend

~keystart=ImgMode
ImgMode - select the imaging mode.  Usage:

		imgmode xrays  -or-  imgmode pulses

	1) In sls8x2 module, selects whether to split counts at chip edges into
		the double and quadruple pixels of the sensor.  If xrays selected,
		counts are split; feature is off for pulses.
	2) Arguments can be abbreviated as 'x' or 'p', or '1' and '0' respecitvely
	3) In the x-ray mode, the xor table returns 0 for the (impossible)
		input of 0; in the pulse mode, returns 0xffff.
~keyend

~keystart=Gpibsend_volt
Gpibsend_volt - send typed command to GPIB voltmeter
~keyend

~keystart=Gpibread_volt
Gpibread_volt - get output from GPIB voltmeter
~keyend

~keystart=Gpibread_scope
Gpibread_scope - get output from GPIB oscilloscope
~keyend

~keystart=Gpibsend_scope
Gpibsend_scope - send typed command to GPIB oscilloscope

	1) The GPIB command may be extended with the optional (x,y) address of 
		where in an image to place the value readout.
	Normal syntax:
		gpibread_scope "PArameter_STatistics? CUST, AVG"
	Extended syntax:
		gpibread_scope "PArameter_STatistics? CUST, AVG!",[c],[r]
	Note that the key separator, '!', is within the quotes.
~keyend

~keystart=Scopeimg
Scopeimg - write the image formed by extended 'gpibread_scope' to a file.
	Usage:
			scopeimg "filename"

	1) If filename does not contain a path, 'cam_image_path' is prepended.
	2) More generally, this command writes the current content of the array
		'theImage' to a file.
~keyend

~keystart=Base_settrim
Base_settrim - inform program of pattern location.  Usage:
		base_settrim_pattern address
~keyend

~keystart=Base_trmall
Base_trmall - inform program of pattern location.  Usage:
		base_trim_all_pattern address
~keyend

~keystart=Base_selall
Base_selall - inform program of pattern location.  Usage:
		base_selall address
~keyend

~keystart=Base_readchip
Base_readchip - inform program of pattern location.  Usage:
		base_readchip address
~keyend

~keystart=Base_vpg_ena
Base_vpg_ena - nform program of pattern location.  Usage:
		base_vpg_ena address
~keyend

~keystart=Base_enable
Base_enable - inform program of pattern location.  Usage:
		base_enable address
~keyend

~keystart=Base_disable
Base_disable - inform program of pattern location.  Usage:
		base_disable address
~keyend

~keystart=Base_i2cpat
Base_i2cpat - inform program of position of i2c patterns.  Usage:
		base_i2cpa address

	1) Must be <= 0x7800
~keyend

~keystart=Pwait
Pwait - wait for pattern to finish up to n seconds.  Usage:
		pwait [n]

	1) n is the timeout (maximum wait) in seconds - an integer.  If time
		is not specified, a default of 1 sec is used.
	2) Waits for the wait* signal in the VPG517 to become active.
~keyend

~keystart=SetNImages
SetNImages - set number of images for fine-slice mode.  Usage:
		setnimages [n]

	1) 0 is the default
	2) If no value is given, the current value is printed
~keyend


~keystart=DataSection
DataSection - write a DataSection comment to all params.txt files.  Usage:
		datasection any_text

	1) Uses path of last image to find params.txt
	2) Identifies data block for tvx
~keyend

~keystart=VPG_Exp
VPG_Exp - make an exposure using the pattern generator clock. This function
	basically works the same way as Exposure but uses a pattern instead of the
	CPU clock. Usage:
	vpg_exp filename.img 
~keyend


~keystart=EndOfHelpText  **** THIS INDICATES THE END OF THE HELP FILE TEXT. 
                TEXT AFTER THIS WILL NOT BE READ! ****



Commands for the R-Axis4 controller at SPring8 bl38b1:
Cm_input:
Cm_output:
Cm_shutter:
Cm_getmotval:
Cm_putmotval:
Cm_check_motion:
Cm_moveto:
Cm_manual:
Cm_home:
Cm_dc:

--------------------------------------------------------------------------
--------------------------------------------------------------------------
Commands that are easy to mix up:

Read_setup - reread, e.g., camera.def - the entire camera definition file
			(this will also reread sls05_mcb_16.def)
	e.g.:  read_setup /home/det/sls05_mcb/config/cam_data/camera.def

Read_signals - reread, e.g., sls05_mcb_16.def - the ppg configuration file
	e.g.:  read_signals /home/det/sls05_mcb/config/cam_data/sls05_mcb_16.def

LdCmndFile - reread, e.g., sls05mcb.set - or any file of commands
	e.g.:  ldcmndfile /home/det/sls05_mcb/config/cam_data/sls05mcb.set
